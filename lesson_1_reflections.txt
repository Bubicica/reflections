How did viewing a diff between two versions of a file help you see the bug that was introduced?
It pointed out the exact differences between the two files, so it was easy to recognize.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
I can always see where I started from and always revert to the point where I might have screwed up. Also, there might be more people working on the project.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
The obvious con is that I can and will forget to save in time or at the right time. The pro is that I get to choose when I feel like things need a saving.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
It depends on what you want to track. Naturally programs usually consist of more files, which are likely need to be tracked together.

How can you use the commands git log and git diff to view the history of files?
First we'll need to view the log of the repo, then we need to compare them with diff to see exactly what changes were made.

How might using version control make you more confident to make changes that could break something?
I would know there is always a way back.

What happens when you initialize a repository? Why do you need to do it?
A hidden git folder is created. It is needed in order to make branches and commits.